##########################
# This file was copied from https://github.com/cloudfoundry/staticfile-buildpack/tree/master/conf
# and then modified for this app.
##########################

worker_processes 1;
daemon off;

error_log <%= ENV["APP_ROOT"] %>/nginx/logs/error.log;
events { worker_connections 1024; }

http {
  charset utf-8;
  log_format cloudfoundry '$http_x_forwarded_for - $http_referer - [$time_local] "$request" $status $body_bytes_sent';
  access_log <%= ENV["APP_ROOT"] %>/nginx/logs/access.log cloudfoundry;
  default_type application/octet-stream;
  include mime.types;
  sendfile on;

  gzip on;
  gzip_disable "msie6";
  gzip_comp_level 6;
  gzip_min_length 1100;
  gzip_buffers 16 8k;
  gzip_proxied any;
  gunzip on;
  gzip_static always;
  gzip_types text/plain text/css text/js text/xml text/javascript application/javascript application/x-javascript application/json application/xml application/xml+rss;

  tcp_nopush on;
  keepalive_timeout 30;
  port_in_redirect off; # Ensure that redirects don't include the internal container PORT - <%= ENV["PORT"] %>
  server_tokens off;

  # Expires map
  map $sent_http_content_type $expires {
    default                    off;
    text/html                  10m;
    text/xml                   10m;
    application/json           10m;
    text/css                   10m;
    application/javascript     10m;
    application/x-javascript   10m;
    application/pdf            10m;
    ~image/                    10m;
  }

  server {
    listen <%= ENV["PORT"] %>;
    server_name localhost;

    error_page 404 /404.html;

    add_header X-Frame-Options "SAMEORIGIN";

    expires $expires;

    # adding some custom rules to strip out the html extension
    index index.html;

    if (!-f "${request_filename}index.html") {
        rewrite ^/(.*)/$ /$1 permanent;
    }

    if ($request_uri ~* "/index.html") {
        rewrite (?i)^(.*)index\.html$ $1 permanent;
    }

    if ($request_uri ~* ".html") {
        rewrite (?i)^(.*)/(.*)\.html $1/$2 permanent;
    }

    location / {
      root <%= ENV["APP_ROOT"] %>/public;

      try_files $uri.html $uri $uri/ /index.html;

      <% if File.exists?(File.join(ENV["APP_ROOT"], "nginx/conf/.enable_pushstate")) %>
      if (!-e $request_filename) {
        rewrite ^(.*)$ / break;
      }
      <% end %>
      index index.html index.htm Default.htm;
      <% if File.exists?(File.join(ENV["APP_ROOT"], "nginx/conf/.enable_directory_index")) %>
        autoindex on;
      <% end %>
      <% if File.exists?(auth_file = File.join(ENV["APP_ROOT"], "nginx/conf/.htpasswd")) %>
        auth_basic "Restricted";                                #For Basic Auth
        auth_basic_user_file <%= auth_file %>;  #For Basic Auth
      <% end %>

      <% if File.exists?(File.join(ENV["APP_ROOT"], "nginx/conf/.enable_ssi")) %>
        ssi on;
      <% end %>
    }
  }
}
